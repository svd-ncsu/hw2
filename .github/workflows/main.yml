# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Set up Python 3.13
      uses: actions/setup-python@v3
      with:
        python-version: "3.x"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install autopep8 flake8 pyright pytest pytest-cov genbadge
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Format code with autopep
      run: |
        autopep8 --in-place --recursive .
        
    - name: Check for changes
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
        git add .
        git diff-index --quiet HEAD || git commit -m "Automatically format code with autopep8"
    
    # Run Pyright and append traces with timestamps
    - name: Run pyright and save traces with timestamp
      run: |
        mkdir -p post_traces
        echo -e "\nPyright Trace for hw2_debugging.py - $(date)" >> post_traces/pyright_hw2_debugging.txt
        pyright hw2_debugging.py >> post_traces/pyright_hw2_debugging.txt
        echo -e "\nPyright Trace for rand.py - $(date)" >> post_traces/pyright_rand.txt
        pyright rand.py >> post_traces/pyright_rand.txt

    # Run flake8 and append traces with timestamps
    - name: Run flake8 and save traces with timestamp
      run: |
        mkdir -p post_traces
        echo -e "\nFlake8 Trace for hw2_debugging.py - $(date)" >> post_traces/flake8_hw2_debugging.txt
        flake8 --verbose hw2_debugging.py >> post_traces/flake8_hw2_debugging.txt || true
        echo -e "\nFlake8 Trace for rand.py - $(date)" >> post_traces/flake8_rand.txt
        flake8 --verbose rand.py >> post_traces/flake8_rand.txt || true

    - name: Push changes
      if: success()
      run: |
        git config --global user.name "GitHub Action"
        git config --global user.email "action@github.com"
        git add .
        git diff-index --quiet HEAD || git commit -m "Update traces"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Test with pytest
      run: |
        pytest test.py

    - name: Code Coverage report
      run: 
        pytest --cov-report xml:reports/coverage/coverage.xml --cov=. test.py

    - name: Create Badge
      run: 
        genbadge flake8 -v -i - < post_traces/flake8_hw2_debugging.txt -o > flake8-badge.svg